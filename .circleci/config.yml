version: 2

defaults: &defaults
  docker:
    - image: ncodamusic/linux-bundles:26
  working_directory: /root/workdir

jobs:
  clone_repos:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: Make the Circle CI cache key
          command: make circle-cache-key

      - restore_cache:
          keys:
            - v1-repo-{{ checksum "FUJIAN_RELEASE" }}
            - v1-repo-{{ checksum "JULIUS_RELEASE" }}
            - v1-repo-{{ checksum "LYCHEE_RELEASE" }}
      - run:
          name: Clone the repositories
          command: make clone-repos
      - save_cache:
          paths:
            - "/root/workdir/repos/fujian"
          key: v1-repo-{{ checksum "FUJIAN_RELEASE" }}
          when: on_success
      - save_cache:
          paths:
            - "/root/workdir/repos/julius"
          key: v1-repo-{{ checksum "JULIUS_RELEASE" }}
          when: on_success
      - save_cache:
          paths:
            - "/root/workdir/repos/lychee"
          key: v1-repo-{{ checksum "LYCHEE_RELEASE" }}
          when: on_success

      - persist_to_workspace:
          root: /root/workdir
          paths:
            - circle-cache-key
            - repos

  install-py:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root/workdir
      - restore_cache:
          keys:
            - v1-pypi-{{ checksum "circle-cache-key" }}
      - run:
          name: Install Python dependencies
          command: make build-venv
      - save_cache:
          paths:
            - "/root/.cache/pip"
          key: v1-pypi-{{ checksum "circle-cache-key" }}
          when: on_success
      - persist_to_workspace:
          root: /root/workdir
          paths:
            - ncoda-venv

  install-js:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root/workdir
      - restore_cache:
          keys:
            - v1-npm-{{ checksum "circle-cache-key" }}
      - run:
          name: Install JavaScript dependencies
          command: make install-julius
      - save_cache:
          paths:
            - "/usr/local/share/.cache/yarn/v1"
            - "/root/.electron"
          key: v1-npm-{{ checksum "circle-cache-key" }}
          when: on_success
      - persist_to_workspace:
          root: /root/workdir
          paths:
            - repos/julius

  build-py:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root/workdir
      - run:
          name: Build the Python bundle
          command: make build-pex
      - persist_to_workspace:
          root: /root/workdir
          paths:
            - fujian.pex

  build-js:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root/workdir
      - run:
          name: Build the Front-end assets
          command: make build-julius
      - persist_to_workspace:
          root: /root/workdir
          paths:
            - repos/julius/build

  package-electron:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root/workdir
      - run:
          name: Make the Electron bundle
          command: |
            make finish-ncoda
            make archive-electron
      - store_artifacts:
          path: /root/workdir/ncoda-electron.xz

  package-http:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root/workdir
      - run:
          name: Make the HTTP bundle
          command: |
            make finish-ncoda
            make archive-http
      - store_artifacts:
          path: /root/workdir/ncoda-http.xz

workflows:
  version: 2
  build-release:
    jobs:
      - clone_repos

      - install-py:
          requires:
            - clone_repos
      - install-js:
          requires:
            - clone_repos

      - build-py:
          requires:
            - install-py
      - build-js:
          requires:
            - install-js

      - package-electron:
          requires:
            - build-py
            - build-js
      - package-http:
          requires:
            - build-py
            - build-js
